Terminals unused in grammar

   "number"
   "name"


State 0 conflicts: 2 shift/reduce
State 10 conflicts: 2 shift/reduce
State 20 conflicts: 2 shift/reduce
State 62 conflicts: 2 shift/reduce


Grammar

    0 $accept: top $end

    1 top: schema

    2 schema: defs
    3       | nsDecl defs

    4 defs: e
    5     | defList

    6 defList: def
    7        | defList def

    8 def: annots define
    9    | annots groupDef
   10    | incrAnnot

   11 define: nameWithId '=' enum
   12       | nameWithId '=' type

   13 groupDef: nameWithId
   14         | nameWithId ':' qName
   15         | nameWithId ':' qName "->" fields
   16         | nameWithId "->" fields

   17 fields: field
   18       | fields ',' field

   19 field: annots type annots nameWithId opt

   20 opt: e
   21    | '?'

   22 type: single
   23     | sequence

   24 single: ref
   25       | time
   26       | number
   27       | string
   28       | binary
   29       | fixed
   30       | "boolean"
   31       | "object"

   32 sequence: single '[' ']'

   33 string: "string"
   34       | "string" size

   35 binary: "binary"
   36       | "binary" size

   37 fixed: "fixed" size

   38 size: '(' uInt ')'
   39     | '(' hexNum ')'

   40 ref: qName
   41    | qName '*'

   42 number: "i8"
   43       | "i16"
   44       | "i32"
   45       | "i64"
   46       | "u8"
   47       | "u16"
   48       | "u32"
   49       | "u64"
   50       | "f64"
   51       | "decimal"

   52 time: "date"
   53     | "timeOfDayMilli"
   54     | "timeOfDayNano"
   55     | "nanotime"
   56     | "millitime"

   57 enum: '|' sym
   58     | symList

   59 symList: sym
   60        | symList '|' sym

   61 sym: annots name val

   62 val: e
   63    | '/' int
   64    | '/' hexNum

   65 annots: e
   66       | annotList

   67 annotList: annot
   68          | annotList annot

   69 annot: '@' qNameOrKeyword '=' literal

   70 literal: literalSegment
   71        | literal literalSegment

   72 nameWithId: name id

   73 id: e
   74   | '/' uInt
   75   | '/' hexNum

   76 incrAnnot: compRef "<-" incrAnnotList

   77 compRef: "schema"
   78        | qName
   79        | qName '.' "type"
   80        | qName '.' name
   81        | qName '.' name '.' "type"

   82 incrAnnotList: incrAnnotItem
   83              | incrAnnotItem "<-" incrAnnotList

   84 incrAnnotItem: "int"
   85              | "uint"
   86              | "hexnum"
   87              | annot

   88 qName: name
   89      | cName

   90 qNameOrKeyword: qName
   91               | keyword

   92 keyword: "i8"
   93        | "i16"
   94        | "i32"
   95        | "i64"
   96        | "u8"
   97        | "u16"
   98        | "u32"
   99        | "u64"
  100        | "f64"
  101        | "decimal"
  102        | "date"
  103        | "timeOfDayMilli"
  104        | "timeOfDayNano"
  105        | "nanotime"
  106        | "millitime"
  107        | "boolean"
  108        | "string"
  109        | "binary"
  110        | "fixed"
  111        | "object"
  112        | "namespace"
  113        | "type"
  114        | "schema"

  115 cName: "cName"

  116 name: "ncName"
  117     | "\\ncName"

  118 nsDecl: "namespace" name

  119 literalSegment: "\"<annotation>\" or '<annotation>'"

  120 int: "int"
  121    | "uint"

  122 uInt: "uint"

  123 hexNum: "hexnum"

  124 e: %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 38 39
')' (41) 38 39
'*' (42) 41
',' (44) 18
'.' (46) 79 80 81
'/' (47) 63 64 74 75
':' (58) 14 15
'=' (61) 11 12 69
'?' (63) 21
'@' (64) 69
'[' (91) 32
']' (93) 32
'|' (124) 57 60
error (256)
"i8" (258) 42 92
"i16" (259) 43 93
"i32" (260) 44 94
"i64" (261) 45 95
"u8" (262) 46 96
"u16" (263) 47 97
"u32" (264) 48 98
"u64" (265) 49 99
"f64" (266) 50 100
"decimal" (267) 51 101
"date" (268) 52 102
"timeOfDayMilli" (269) 53 103
"timeOfDayNano" (270) 54 104
"nanotime" (271) 55 105
"millitime" (272) 56 106
"boolean" (273) 30 107
"string" (274) 33 34 108
"object" (275) 31 111
"namespace" (276) 112 118
"type" (277) 79 81 113
"schema" (278) 77 114
"binary" (279) 35 36 109
"number" (280)
"fixed" (281) 37 110
"<-" (282) 76 83
"->" (283) 15 16
"hexnum" (284) 86 123
"uint" (285) 85 121 122
"int" (286) 84 120
"name" (287)
"ncName" (288) 116
"\\ncName" (289) 117
"cName" (290) 115
"\"<annotation>\" or '<annotation>'" (291) 119


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
top (51)
    on left: 1, on right: 0
schema (52)
    on left: 2 3, on right: 1
defs (53)
    on left: 4 5, on right: 2 3
defList (54)
    on left: 6 7, on right: 5 7
def (55)
    on left: 8 9 10, on right: 6 7
define (56)
    on left: 11 12, on right: 8
groupDef (57)
    on left: 13 14 15 16, on right: 9
fields (58)
    on left: 17 18, on right: 15 16 18
field (59)
    on left: 19, on right: 17 18
opt (60)
    on left: 20 21, on right: 19
type (61)
    on left: 22 23, on right: 12 19
single (62)
    on left: 24 25 26 27 28 29 30 31, on right: 22 32
sequence (63)
    on left: 32, on right: 23
string (64)
    on left: 33 34, on right: 27
binary (65)
    on left: 35 36, on right: 28
fixed (66)
    on left: 37, on right: 29
size (67)
    on left: 38 39, on right: 34 36 37
ref (68)
    on left: 40 41, on right: 24
number (69)
    on left: 42 43 44 45 46 47 48 49 50 51, on right: 26
time (70)
    on left: 52 53 54 55 56, on right: 25
enum (71)
    on left: 57 58, on right: 11
symList (72)
    on left: 59 60, on right: 58 60
sym (73)
    on left: 61, on right: 57 59 60
val (74)
    on left: 62 63 64, on right: 61
annots (75)
    on left: 65 66, on right: 8 9 19 61
annotList (76)
    on left: 67 68, on right: 66 68
annot (77)
    on left: 69, on right: 67 68 87
literal (78)
    on left: 70 71, on right: 69 71
nameWithId (79)
    on left: 72, on right: 11 12 13 14 15 16 19
id (80)
    on left: 73 74 75, on right: 72
incrAnnot (81)
    on left: 76, on right: 10
compRef (82)
    on left: 77 78 79 80 81, on right: 76
incrAnnotList (83)
    on left: 82 83, on right: 76 83
incrAnnotItem (84)
    on left: 84 85 86 87, on right: 82 83
qName (85)
    on left: 88 89, on right: 14 15 40 41 78 79 80 81 90
qNameOrKeyword (86)
    on left: 90 91, on right: 69
keyword (87)
    on left: 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107
    108 109 110 111 112 113 114, on right: 91
cName (88)
    on left: 115, on right: 89
name (89)
    on left: 116 117, on right: 61 72 80 81 88 118
nsDecl (90)
    on left: 118, on right: 3
literalSegment (91)
    on left: 119, on right: 70 71
int (92)
    on left: 120 121, on right: 63
uInt (93)
    on left: 122, on right: 38 74
hexNum (94)
    on left: 123, on right: 39 64 75
e (95)
    on left: 124, on right: 4 20 62 65 73


State 0

    0 $accept: . top $end
    1 top: . schema
    2 schema: . defs
    3       | . nsDecl defs
    4 defs: . e
    5     | . defList
    6 defList: . def
    7        | . defList def
    8 def: . annots define
    9    | . annots groupDef
   10    | . incrAnnot
   65 annots: . e
   66       | . annotList
   67 annotList: . annot
   68          | . annotList annot
   69 annot: . '@' qNameOrKeyword '=' literal
   76 incrAnnot: . compRef "<-" incrAnnotList
   77 compRef: . "schema"
   78        | . qName
   79        | . qName '.' "type"
   80        | . qName '.' name
   81        | . qName '.' name '.' "type"
   88 qName: . name
   89      | . cName
  115 cName: . "cName"
  116 name: . "ncName"
  117     | . "\\ncName"
  118 nsDecl: . "namespace" name
  124 e: . %empty  [$end, "ncName", "\\ncName"]

    "namespace"  shift, and go to state 1
    "schema"     shift, and go to state 2
    "ncName"     shift, and go to state 3
    "\\ncName"   shift, and go to state 4
    "cName"      shift, and go to state 5
    '@'          shift, and go to state 6

    "ncName"    [reduce using rule 124 (e)]
    "\\ncName"  [reduce using rule 124 (e)]
    $default    reduce using rule 124 (e)

    top        go to state 7
    schema     go to state 8
    defs       go to state 9
    defList    go to state 10
    def        go to state 11
    annots     go to state 12
    annotList  go to state 13
    annot      go to state 14
    incrAnnot  go to state 15
    compRef    go to state 16
    qName      go to state 17
    cName      go to state 18
    name       go to state 19
    nsDecl     go to state 20
    e          go to state 21


State 1

  116 name: . "ncName"
  117     | . "\\ncName"
  118 nsDecl: "namespace" . name

    "ncName"    shift, and go to state 3
    "\\ncName"  shift, and go to state 4

    name  go to state 22


State 2

   77 compRef: "schema" .

    $default  reduce using rule 77 (compRef)


State 3

  116 name: "ncName" .

    $default  reduce using rule 116 (name)


State 4

  117 name: "\\ncName" .

    $default  reduce using rule 117 (name)


State 5

  115 cName: "cName" .

    $default  reduce using rule 115 (cName)


State 6

   69 annot: '@' . qNameOrKeyword '=' literal
   88 qName: . name
   89      | . cName
   90 qNameOrKeyword: . qName
   91               | . keyword
   92 keyword: . "i8"
   93        | . "i16"
   94        | . "i32"
   95        | . "i64"
   96        | . "u8"
   97        | . "u16"
   98        | . "u32"
   99        | . "u64"
  100        | . "f64"
  101        | . "decimal"
  102        | . "date"
  103        | . "timeOfDayMilli"
  104        | . "timeOfDayNano"
  105        | . "nanotime"
  106        | . "millitime"
  107        | . "boolean"
  108        | . "string"
  109        | . "binary"
  110        | . "fixed"
  111        | . "object"
  112        | . "namespace"
  113        | . "type"
  114        | . "schema"
  115 cName: . "cName"
  116 name: . "ncName"
  117     | . "\\ncName"

    "i8"              shift, and go to state 23
    "i16"             shift, and go to state 24
    "i32"             shift, and go to state 25
    "i64"             shift, and go to state 26
    "u8"              shift, and go to state 27
    "u16"             shift, and go to state 28
    "u32"             shift, and go to state 29
    "u64"             shift, and go to state 30
    "f64"             shift, and go to state 31
    "decimal"         shift, and go to state 32
    "date"            shift, and go to state 33
    "timeOfDayMilli"  shift, and go to state 34
    "timeOfDayNano"   shift, and go to state 35
    "nanotime"        shift, and go to state 36
    "millitime"       shift, and go to state 37
    "boolean"         shift, and go to state 38
    "string"          shift, and go to state 39
    "object"          shift, and go to state 40
    "namespace"       shift, and go to state 41
    "type"            shift, and go to state 42
    "schema"          shift, and go to state 43
    "binary"          shift, and go to state 44
    "fixed"           shift, and go to state 45
    "ncName"          shift, and go to state 3
    "\\ncName"        shift, and go to state 4
    "cName"           shift, and go to state 5

    qName           go to state 46
    qNameOrKeyword  go to state 47
    keyword         go to state 48
    cName           go to state 18
    name            go to state 19


State 7

    0 $accept: top . $end

    $end  shift, and go to state 49


State 8

    1 top: schema .

    $default  reduce using rule 1 (top)


State 9

    2 schema: defs .

    $default  reduce using rule 2 (schema)


State 10

    5 defs: defList .  [$end]
    7 defList: defList . def
    8 def: . annots define
    9    | . annots groupDef
   10    | . incrAnnot
   65 annots: . e
   66       | . annotList
   67 annotList: . annot
   68          | . annotList annot
   69 annot: . '@' qNameOrKeyword '=' literal
   76 incrAnnot: . compRef "<-" incrAnnotList
   77 compRef: . "schema"
   78        | . qName
   79        | . qName '.' "type"
   80        | . qName '.' name
   81        | . qName '.' name '.' "type"
   88 qName: . name
   89      | . cName
  115 cName: . "cName"
  116 name: . "ncName"
  117     | . "\\ncName"
  124 e: . %empty  ["ncName", "\\ncName"]

    "schema"    shift, and go to state 2
    "ncName"    shift, and go to state 3
    "\\ncName"  shift, and go to state 4
    "cName"     shift, and go to state 5
    '@'         shift, and go to state 6

    "ncName"    [reduce using rule 124 (e)]
    "\\ncName"  [reduce using rule 124 (e)]
    $default    reduce using rule 5 (defs)

    def        go to state 50
    annots     go to state 12
    annotList  go to state 13
    annot      go to state 14
    incrAnnot  go to state 15
    compRef    go to state 16
    qName      go to state 17
    cName      go to state 18
    name       go to state 19
    e          go to state 51


State 11

    6 defList: def .

    $default  reduce using rule 6 (defList)


State 12

    8 def: annots . define
    9    | annots . groupDef
   11 define: . nameWithId '=' enum
   12       | . nameWithId '=' type
   13 groupDef: . nameWithId
   14         | . nameWithId ':' qName
   15         | . nameWithId ':' qName "->" fields
   16         | . nameWithId "->" fields
   72 nameWithId: . name id
  116 name: . "ncName"
  117     | . "\\ncName"

    "ncName"    shift, and go to state 3
    "\\ncName"  shift, and go to state 4

    define      go to state 52
    groupDef    go to state 53
    nameWithId  go to state 54
    name        go to state 55


State 13

   66 annots: annotList .  ["i8", "i16", "i32", "i64", "u8", "u16", "u32", "u64", "f64", "decimal", "date", "timeOfDayMilli", "timeOfDayNano", "nanotime", "millitime", "boolean", "string", "object", "binary", "fixed", "ncName", "\\ncName", "cName"]
   68 annotList: annotList . annot
   69 annot: . '@' qNameOrKeyword '=' literal

    '@'  shift, and go to state 6

    $default  reduce using rule 66 (annots)

    annot  go to state 56


State 14

   67 annotList: annot .

    $default  reduce using rule 67 (annotList)


State 15

   10 def: incrAnnot .

    $default  reduce using rule 10 (def)


State 16

   76 incrAnnot: compRef . "<-" incrAnnotList

    "<-"  shift, and go to state 57


State 17

   78 compRef: qName .  ["<-"]
   79        | qName . '.' "type"
   80        | qName . '.' name
   81        | qName . '.' name '.' "type"

    '.'  shift, and go to state 58

    $default  reduce using rule 78 (compRef)


State 18

   89 qName: cName .

    $default  reduce using rule 89 (qName)


State 19

   88 qName: name .

    $default  reduce using rule 88 (qName)


State 20

    3 schema: nsDecl . defs
    4 defs: . e
    5     | . defList
    6 defList: . def
    7        | . defList def
    8 def: . annots define
    9    | . annots groupDef
   10    | . incrAnnot
   65 annots: . e
   66       | . annotList
   67 annotList: . annot
   68          | . annotList annot
   69 annot: . '@' qNameOrKeyword '=' literal
   76 incrAnnot: . compRef "<-" incrAnnotList
   77 compRef: . "schema"
   78        | . qName
   79        | . qName '.' "type"
   80        | . qName '.' name
   81        | . qName '.' name '.' "type"
   88 qName: . name
   89      | . cName
  115 cName: . "cName"
  116 name: . "ncName"
  117     | . "\\ncName"
  124 e: . %empty  [$end, "ncName", "\\ncName"]

    "schema"    shift, and go to state 2
    "ncName"    shift, and go to state 3
    "\\ncName"  shift, and go to state 4
    "cName"     shift, and go to state 5
    '@'         shift, and go to state 6

    "ncName"    [reduce using rule 124 (e)]
    "\\ncName"  [reduce using rule 124 (e)]
    $default    reduce using rule 124 (e)

    defs       go to state 59
    defList    go to state 10
    def        go to state 11
    annots     go to state 12
    annotList  go to state 13
    annot      go to state 14
    incrAnnot  go to state 15
    compRef    go to state 16
    qName      go to state 17
    cName      go to state 18
    name       go to state 19
    e          go to state 21


State 21

    4 defs: e .  [$end]
   65 annots: e .  ["ncName", "\\ncName"]

    $end      reduce using rule 4 (defs)
    $default  reduce using rule 65 (annots)


State 22

  118 nsDecl: "namespace" name .

    $default  reduce using rule 118 (nsDecl)


State 23

   92 keyword: "i8" .

    $default  reduce using rule 92 (keyword)


State 24

   93 keyword: "i16" .

    $default  reduce using rule 93 (keyword)


State 25

   94 keyword: "i32" .

    $default  reduce using rule 94 (keyword)


State 26

   95 keyword: "i64" .

    $default  reduce using rule 95 (keyword)


State 27

   96 keyword: "u8" .

    $default  reduce using rule 96 (keyword)


State 28

   97 keyword: "u16" .

    $default  reduce using rule 97 (keyword)


State 29

   98 keyword: "u32" .

    $default  reduce using rule 98 (keyword)


State 30

   99 keyword: "u64" .

    $default  reduce using rule 99 (keyword)


State 31

  100 keyword: "f64" .

    $default  reduce using rule 100 (keyword)


State 32

  101 keyword: "decimal" .

    $default  reduce using rule 101 (keyword)


State 33

  102 keyword: "date" .

    $default  reduce using rule 102 (keyword)


State 34

  103 keyword: "timeOfDayMilli" .

    $default  reduce using rule 103 (keyword)


State 35

  104 keyword: "timeOfDayNano" .

    $default  reduce using rule 104 (keyword)


State 36

  105 keyword: "nanotime" .

    $default  reduce using rule 105 (keyword)


State 37

  106 keyword: "millitime" .

    $default  reduce using rule 106 (keyword)


State 38

  107 keyword: "boolean" .

    $default  reduce using rule 107 (keyword)


State 39

  108 keyword: "string" .

    $default  reduce using rule 108 (keyword)


State 40

  111 keyword: "object" .

    $default  reduce using rule 111 (keyword)


State 41

  112 keyword: "namespace" .

    $default  reduce using rule 112 (keyword)


State 42

  113 keyword: "type" .

    $default  reduce using rule 113 (keyword)


State 43

  114 keyword: "schema" .

    $default  reduce using rule 114 (keyword)


State 44

  109 keyword: "binary" .

    $default  reduce using rule 109 (keyword)


State 45

  110 keyword: "fixed" .

    $default  reduce using rule 110 (keyword)


State 46

   90 qNameOrKeyword: qName .

    $default  reduce using rule 90 (qNameOrKeyword)


State 47

   69 annot: '@' qNameOrKeyword . '=' literal

    '='  shift, and go to state 60


State 48

   91 qNameOrKeyword: keyword .

    $default  reduce using rule 91 (qNameOrKeyword)


State 49

    0 $accept: top $end .

    $default  accept


State 50

    7 defList: defList def .

    $default  reduce using rule 7 (defList)


State 51

   65 annots: e .

    $default  reduce using rule 65 (annots)


State 52

    8 def: annots define .

    $default  reduce using rule 8 (def)


State 53

    9 def: annots groupDef .

    $default  reduce using rule 9 (def)


State 54

   11 define: nameWithId . '=' enum
   12       | nameWithId . '=' type
   13 groupDef: nameWithId .  [$end, "schema", "ncName", "\\ncName", "cName", '@']
   14         | nameWithId . ':' qName
   15         | nameWithId . ':' qName "->" fields
   16         | nameWithId . "->" fields

    "->"  shift, and go to state 61
    '='   shift, and go to state 62
    ':'   shift, and go to state 63

    $default  reduce using rule 13 (groupDef)


State 55

   72 nameWithId: name . id
   73 id: . e
   74   | . '/' uInt
   75   | . '/' hexNum
  124 e: . %empty  [$end, "schema", "->", "ncName", "\\ncName", "cName", '=', ':', ',', '?', '@']

    '/'  shift, and go to state 64

    $default  reduce using rule 124 (e)

    id  go to state 65
    e   go to state 66


State 56

   68 annotList: annotList annot .

    $default  reduce using rule 68 (annotList)


State 57

   69 annot: . '@' qNameOrKeyword '=' literal
   76 incrAnnot: compRef "<-" . incrAnnotList
   82 incrAnnotList: . incrAnnotItem
   83              | . incrAnnotItem "<-" incrAnnotList
   84 incrAnnotItem: . "int"
   85              | . "uint"
   86              | . "hexnum"
   87              | . annot

    "hexnum"  shift, and go to state 67
    "uint"    shift, and go to state 68
    "int"     shift, and go to state 69
    '@'       shift, and go to state 6

    annot          go to state 70
    incrAnnotList  go to state 71
    incrAnnotItem  go to state 72


State 58

   79 compRef: qName '.' . "type"
   80        | qName '.' . name
   81        | qName '.' . name '.' "type"
  116 name: . "ncName"
  117     | . "\\ncName"

    "type"      shift, and go to state 73
    "ncName"    shift, and go to state 3
    "\\ncName"  shift, and go to state 4

    name  go to state 74


State 59

    3 schema: nsDecl defs .

    $default  reduce using rule 3 (schema)


State 60

   69 annot: '@' qNameOrKeyword '=' . literal
   70 literal: . literalSegment
   71        | . literal literalSegment
  119 literalSegment: . "\"<annotation>\" or '<annotation>'"

    "\"<annotation>\" or '<annotation>'"  shift, and go to state 75

    literal         go to state 76
    literalSegment  go to state 77


State 61

   16 groupDef: nameWithId "->" . fields
   17 fields: . field
   18       | . fields ',' field
   19 field: . annots type annots nameWithId opt
   65 annots: . e
   66       | . annotList
   67 annotList: . annot
   68          | . annotList annot
   69 annot: . '@' qNameOrKeyword '=' literal
  124 e: . %empty  ["i8", "i16", "i32", "i64", "u8", "u16", "u32", "u64", "f64", "decimal", "date", "timeOfDayMilli", "timeOfDayNano", "nanotime", "millitime", "boolean", "string", "object", "binary", "fixed", "ncName", "\\ncName", "cName"]

    '@'  shift, and go to state 6

    $default  reduce using rule 124 (e)

    fields     go to state 78
    field      go to state 79
    annots     go to state 80
    annotList  go to state 13
    annot      go to state 14
    e          go to state 51


State 62

   11 define: nameWithId '=' . enum
   12       | nameWithId '=' . type
   22 type: . single
   23     | . sequence
   24 single: . ref
   25       | . time
   26       | . number
   27       | . string
   28       | . binary
   29       | . fixed
   30       | . "boolean"
   31       | . "object"
   32 sequence: . single '[' ']'
   33 string: . "string"
   34       | . "string" size
   35 binary: . "binary"
   36       | . "binary" size
   37 fixed: . "fixed" size
   40 ref: . qName
   41    | . qName '*'
   42 number: . "i8"
   43       | . "i16"
   44       | . "i32"
   45       | . "i64"
   46       | . "u8"
   47       | . "u16"
   48       | . "u32"
   49       | . "u64"
   50       | . "f64"
   51       | . "decimal"
   52 time: . "date"
   53     | . "timeOfDayMilli"
   54     | . "timeOfDayNano"
   55     | . "nanotime"
   56     | . "millitime"
   57 enum: . '|' sym
   58     | . symList
   59 symList: . sym
   60        | . symList '|' sym
   61 sym: . annots name val
   65 annots: . e
   66       | . annotList
   67 annotList: . annot
   68          | . annotList annot
   69 annot: . '@' qNameOrKeyword '=' literal
   88 qName: . name
   89      | . cName
  115 cName: . "cName"
  116 name: . "ncName"
  117     | . "\\ncName"
  124 e: . %empty  ["ncName", "\\ncName"]

    "i8"              shift, and go to state 81
    "i16"             shift, and go to state 82
    "i32"             shift, and go to state 83
    "i64"             shift, and go to state 84
    "u8"              shift, and go to state 85
    "u16"             shift, and go to state 86
    "u32"             shift, and go to state 87
    "u64"             shift, and go to state 88
    "f64"             shift, and go to state 89
    "decimal"         shift, and go to state 90
    "date"            shift, and go to state 91
    "timeOfDayMilli"  shift, and go to state 92
    "timeOfDayNano"   shift, and go to state 93
    "nanotime"        shift, and go to state 94
    "millitime"       shift, and go to state 95
    "boolean"         shift, and go to state 96
    "string"          shift, and go to state 97
    "object"          shift, and go to state 98
    "binary"          shift, and go to state 99
    "fixed"           shift, and go to state 100
    "ncName"          shift, and go to state 3
    "\\ncName"        shift, and go to state 4
    "cName"           shift, and go to state 5
    '|'               shift, and go to state 101
    '@'               shift, and go to state 6

    "ncName"    [reduce using rule 124 (e)]
    "\\ncName"  [reduce using rule 124 (e)]

    type       go to state 102
    single     go to state 103
    sequence   go to state 104
    string     go to state 105
    binary     go to state 106
    fixed      go to state 107
    ref        go to state 108
    number     go to state 109
    time       go to state 110
    enum       go to state 111
    symList    go to state 112
    sym        go to state 113
    annots     go to state 114
    annotList  go to state 13
    annot      go to state 14
    qName      go to state 115
    cName      go to state 18
    name       go to state 19
    e          go to state 51


State 63

   14 groupDef: nameWithId ':' . qName
   15         | nameWithId ':' . qName "->" fields
   88 qName: . name
   89      | . cName
  115 cName: . "cName"
  116 name: . "ncName"
  117     | . "\\ncName"

    "ncName"    shift, and go to state 3
    "\\ncName"  shift, and go to state 4
    "cName"     shift, and go to state 5

    qName  go to state 116
    cName  go to state 18
    name   go to state 19


State 64

   74 id: '/' . uInt
   75   | '/' . hexNum
  122 uInt: . "uint"
  123 hexNum: . "hexnum"

    "hexnum"  shift, and go to state 117
    "uint"    shift, and go to state 118

    uInt    go to state 119
    hexNum  go to state 120


State 65

   72 nameWithId: name id .

    $default  reduce using rule 72 (nameWithId)


State 66

   73 id: e .

    $default  reduce using rule 73 (id)


State 67

   86 incrAnnotItem: "hexnum" .

    $default  reduce using rule 86 (incrAnnotItem)


State 68

   85 incrAnnotItem: "uint" .

    $default  reduce using rule 85 (incrAnnotItem)


State 69

   84 incrAnnotItem: "int" .

    $default  reduce using rule 84 (incrAnnotItem)


State 70

   87 incrAnnotItem: annot .

    $default  reduce using rule 87 (incrAnnotItem)


State 71

   76 incrAnnot: compRef "<-" incrAnnotList .

    $default  reduce using rule 76 (incrAnnot)


State 72

   82 incrAnnotList: incrAnnotItem .  [$end, "schema", "ncName", "\\ncName", "cName", '@']
   83              | incrAnnotItem . "<-" incrAnnotList

    "<-"  shift, and go to state 121

    $default  reduce using rule 82 (incrAnnotList)


State 73

   79 compRef: qName '.' "type" .

    $default  reduce using rule 79 (compRef)


State 74

   80 compRef: qName '.' name .  ["<-"]
   81        | qName '.' name . '.' "type"

    '.'  shift, and go to state 122

    $default  reduce using rule 80 (compRef)


State 75

  119 literalSegment: "\"<annotation>\" or '<annotation>'" .

    $default  reduce using rule 119 (literalSegment)


State 76

   69 annot: '@' qNameOrKeyword '=' literal .  [$end, "i8", "i16", "i32", "i64", "u8", "u16", "u32", "u64", "f64", "decimal", "date", "timeOfDayMilli", "timeOfDayNano", "nanotime", "millitime", "boolean", "string", "object", "schema", "binary", "fixed", "<-", "ncName", "\\ncName", "cName", '@']
   71 literal: literal . literalSegment
  119 literalSegment: . "\"<annotation>\" or '<annotation>'"

    "\"<annotation>\" or '<annotation>'"  shift, and go to state 75

    $default  reduce using rule 69 (annot)

    literalSegment  go to state 123


State 77

   70 literal: literalSegment .

    $default  reduce using rule 70 (literal)


State 78

   16 groupDef: nameWithId "->" fields .  [$end, "schema", "ncName", "\\ncName", "cName", '@']
   18 fields: fields . ',' field

    ','  shift, and go to state 124

    $default  reduce using rule 16 (groupDef)


State 79

   17 fields: field .

    $default  reduce using rule 17 (fields)


State 80

   19 field: annots . type annots nameWithId opt
   22 type: . single
   23     | . sequence
   24 single: . ref
   25       | . time
   26       | . number
   27       | . string
   28       | . binary
   29       | . fixed
   30       | . "boolean"
   31       | . "object"
   32 sequence: . single '[' ']'
   33 string: . "string"
   34       | . "string" size
   35 binary: . "binary"
   36       | . "binary" size
   37 fixed: . "fixed" size
   40 ref: . qName
   41    | . qName '*'
   42 number: . "i8"
   43       | . "i16"
   44       | . "i32"
   45       | . "i64"
   46       | . "u8"
   47       | . "u16"
   48       | . "u32"
   49       | . "u64"
   50       | . "f64"
   51       | . "decimal"
   52 time: . "date"
   53     | . "timeOfDayMilli"
   54     | . "timeOfDayNano"
   55     | . "nanotime"
   56     | . "millitime"
   88 qName: . name
   89      | . cName
  115 cName: . "cName"
  116 name: . "ncName"
  117     | . "\\ncName"

    "i8"              shift, and go to state 81
    "i16"             shift, and go to state 82
    "i32"             shift, and go to state 83
    "i64"             shift, and go to state 84
    "u8"              shift, and go to state 85
    "u16"             shift, and go to state 86
    "u32"             shift, and go to state 87
    "u64"             shift, and go to state 88
    "f64"             shift, and go to state 89
    "decimal"         shift, and go to state 90
    "date"            shift, and go to state 91
    "timeOfDayMilli"  shift, and go to state 92
    "timeOfDayNano"   shift, and go to state 93
    "nanotime"        shift, and go to state 94
    "millitime"       shift, and go to state 95
    "boolean"         shift, and go to state 96
    "string"          shift, and go to state 97
    "object"          shift, and go to state 98
    "binary"          shift, and go to state 99
    "fixed"           shift, and go to state 100
    "ncName"          shift, and go to state 3
    "\\ncName"        shift, and go to state 4
    "cName"           shift, and go to state 5

    type      go to state 125
    single    go to state 103
    sequence  go to state 104
    string    go to state 105
    binary    go to state 106
    fixed     go to state 107
    ref       go to state 108
    number    go to state 109
    time      go to state 110
    qName     go to state 115
    cName     go to state 18
    name      go to state 19


State 81

   42 number: "i8" .

    $default  reduce using rule 42 (number)


State 82

   43 number: "i16" .

    $default  reduce using rule 43 (number)


State 83

   44 number: "i32" .

    $default  reduce using rule 44 (number)


State 84

   45 number: "i64" .

    $default  reduce using rule 45 (number)


State 85

   46 number: "u8" .

    $default  reduce using rule 46 (number)


State 86

   47 number: "u16" .

    $default  reduce using rule 47 (number)


State 87

   48 number: "u32" .

    $default  reduce using rule 48 (number)


State 88

   49 number: "u64" .

    $default  reduce using rule 49 (number)


State 89

   50 number: "f64" .

    $default  reduce using rule 50 (number)


State 90

   51 number: "decimal" .

    $default  reduce using rule 51 (number)


State 91

   52 time: "date" .

    $default  reduce using rule 52 (time)


State 92

   53 time: "timeOfDayMilli" .

    $default  reduce using rule 53 (time)


State 93

   54 time: "timeOfDayNano" .

    $default  reduce using rule 54 (time)


State 94

   55 time: "nanotime" .

    $default  reduce using rule 55 (time)


State 95

   56 time: "millitime" .

    $default  reduce using rule 56 (time)


State 96

   30 single: "boolean" .

    $default  reduce using rule 30 (single)


State 97

   33 string: "string" .  [$end, "schema", "ncName", "\\ncName", "cName", '[', '@']
   34       | "string" . size
   38 size: . '(' uInt ')'
   39     | . '(' hexNum ')'

    '('  shift, and go to state 126

    $default  reduce using rule 33 (string)

    size  go to state 127


State 98

   31 single: "object" .

    $default  reduce using rule 31 (single)


State 99

   35 binary: "binary" .  [$end, "schema", "ncName", "\\ncName", "cName", '[', '@']
   36       | "binary" . size
   38 size: . '(' uInt ')'
   39     | . '(' hexNum ')'

    '('  shift, and go to state 126

    $default  reduce using rule 35 (binary)

    size  go to state 128


State 100

   37 fixed: "fixed" . size
   38 size: . '(' uInt ')'
   39     | . '(' hexNum ')'

    '('  shift, and go to state 126

    size  go to state 129


State 101

   57 enum: '|' . sym
   61 sym: . annots name val
   65 annots: . e
   66       | . annotList
   67 annotList: . annot
   68          | . annotList annot
   69 annot: . '@' qNameOrKeyword '=' literal
  124 e: . %empty  ["ncName", "\\ncName"]

    '@'  shift, and go to state 6

    $default  reduce using rule 124 (e)

    sym        go to state 130
    annots     go to state 114
    annotList  go to state 13
    annot      go to state 14
    e          go to state 51


State 102

   12 define: nameWithId '=' type .

    $default  reduce using rule 12 (define)


State 103

   22 type: single .  [$end, "schema", "ncName", "\\ncName", "cName", '@']
   32 sequence: single . '[' ']'

    '['  shift, and go to state 131

    $default  reduce using rule 22 (type)


State 104

   23 type: sequence .

    $default  reduce using rule 23 (type)


State 105

   27 single: string .

    $default  reduce using rule 27 (single)


State 106

   28 single: binary .

    $default  reduce using rule 28 (single)


State 107

   29 single: fixed .

    $default  reduce using rule 29 (single)


State 108

   24 single: ref .

    $default  reduce using rule 24 (single)


State 109

   26 single: number .

    $default  reduce using rule 26 (single)


State 110

   25 single: time .

    $default  reduce using rule 25 (single)


State 111

   11 define: nameWithId '=' enum .

    $default  reduce using rule 11 (define)


State 112

   58 enum: symList .  [$end, "schema", "ncName", "\\ncName", "cName", '@']
   60 symList: symList . '|' sym

    '|'  shift, and go to state 132

    $default  reduce using rule 58 (enum)


State 113

   59 symList: sym .

    $default  reduce using rule 59 (symList)


State 114

   61 sym: annots . name val
  116 name: . "ncName"
  117     | . "\\ncName"

    "ncName"    shift, and go to state 3
    "\\ncName"  shift, and go to state 4

    name  go to state 133


State 115

   40 ref: qName .  [$end, "schema", "ncName", "\\ncName", "cName", '[', '@']
   41    | qName . '*'

    '*'  shift, and go to state 134

    $default  reduce using rule 40 (ref)


State 116

   14 groupDef: nameWithId ':' qName .  [$end, "schema", "ncName", "\\ncName", "cName", '@']
   15         | nameWithId ':' qName . "->" fields

    "->"  shift, and go to state 135

    $default  reduce using rule 14 (groupDef)


State 117

  123 hexNum: "hexnum" .

    $default  reduce using rule 123 (hexNum)


State 118

  122 uInt: "uint" .

    $default  reduce using rule 122 (uInt)


State 119

   74 id: '/' uInt .

    $default  reduce using rule 74 (id)


State 120

   75 id: '/' hexNum .

    $default  reduce using rule 75 (id)


State 121

   69 annot: . '@' qNameOrKeyword '=' literal
   82 incrAnnotList: . incrAnnotItem
   83              | . incrAnnotItem "<-" incrAnnotList
   83              | incrAnnotItem "<-" . incrAnnotList
   84 incrAnnotItem: . "int"
   85              | . "uint"
   86              | . "hexnum"
   87              | . annot

    "hexnum"  shift, and go to state 67
    "uint"    shift, and go to state 68
    "int"     shift, and go to state 69
    '@'       shift, and go to state 6

    annot          go to state 70
    incrAnnotList  go to state 136
    incrAnnotItem  go to state 72


State 122

   81 compRef: qName '.' name '.' . "type"

    "type"  shift, and go to state 137


State 123

   71 literal: literal literalSegment .

    $default  reduce using rule 71 (literal)


State 124

   18 fields: fields ',' . field
   19 field: . annots type annots nameWithId opt
   65 annots: . e
   66       | . annotList
   67 annotList: . annot
   68          | . annotList annot
   69 annot: . '@' qNameOrKeyword '=' literal
  124 e: . %empty  ["i8", "i16", "i32", "i64", "u8", "u16", "u32", "u64", "f64", "decimal", "date", "timeOfDayMilli", "timeOfDayNano", "nanotime", "millitime", "boolean", "string", "object", "binary", "fixed", "ncName", "\\ncName", "cName"]

    '@'  shift, and go to state 6

    $default  reduce using rule 124 (e)

    field      go to state 138
    annots     go to state 80
    annotList  go to state 13
    annot      go to state 14
    e          go to state 51


State 125

   19 field: annots type . annots nameWithId opt
   65 annots: . e
   66       | . annotList
   67 annotList: . annot
   68          | . annotList annot
   69 annot: . '@' qNameOrKeyword '=' literal
  124 e: . %empty  ["ncName", "\\ncName"]

    '@'  shift, and go to state 6

    $default  reduce using rule 124 (e)

    annots     go to state 139
    annotList  go to state 13
    annot      go to state 14
    e          go to state 51


State 126

   38 size: '(' . uInt ')'
   39     | '(' . hexNum ')'
  122 uInt: . "uint"
  123 hexNum: . "hexnum"

    "hexnum"  shift, and go to state 117
    "uint"    shift, and go to state 118

    uInt    go to state 140
    hexNum  go to state 141


State 127

   34 string: "string" size .

    $default  reduce using rule 34 (string)


State 128

   36 binary: "binary" size .

    $default  reduce using rule 36 (binary)


State 129

   37 fixed: "fixed" size .

    $default  reduce using rule 37 (fixed)


State 130

   57 enum: '|' sym .

    $default  reduce using rule 57 (enum)


State 131

   32 sequence: single '[' . ']'

    ']'  shift, and go to state 142


State 132

   60 symList: symList '|' . sym
   61 sym: . annots name val
   65 annots: . e
   66       | . annotList
   67 annotList: . annot
   68          | . annotList annot
   69 annot: . '@' qNameOrKeyword '=' literal
  124 e: . %empty  ["ncName", "\\ncName"]

    '@'  shift, and go to state 6

    $default  reduce using rule 124 (e)

    sym        go to state 143
    annots     go to state 114
    annotList  go to state 13
    annot      go to state 14
    e          go to state 51


State 133

   61 sym: annots name . val
   62 val: . e
   63    | . '/' int
   64    | . '/' hexNum
  124 e: . %empty  [$end, "schema", "ncName", "\\ncName", "cName", '|', '@']

    '/'  shift, and go to state 144

    $default  reduce using rule 124 (e)

    val  go to state 145
    e    go to state 146


State 134

   41 ref: qName '*' .

    $default  reduce using rule 41 (ref)


State 135

   15 groupDef: nameWithId ':' qName "->" . fields
   17 fields: . field
   18       | . fields ',' field
   19 field: . annots type annots nameWithId opt
   65 annots: . e
   66       | . annotList
   67 annotList: . annot
   68          | . annotList annot
   69 annot: . '@' qNameOrKeyword '=' literal
  124 e: . %empty  ["i8", "i16", "i32", "i64", "u8", "u16", "u32", "u64", "f64", "decimal", "date", "timeOfDayMilli", "timeOfDayNano", "nanotime", "millitime", "boolean", "string", "object", "binary", "fixed", "ncName", "\\ncName", "cName"]

    '@'  shift, and go to state 6

    $default  reduce using rule 124 (e)

    fields     go to state 147
    field      go to state 79
    annots     go to state 80
    annotList  go to state 13
    annot      go to state 14
    e          go to state 51


State 136

   83 incrAnnotList: incrAnnotItem "<-" incrAnnotList .

    $default  reduce using rule 83 (incrAnnotList)


State 137

   81 compRef: qName '.' name '.' "type" .

    $default  reduce using rule 81 (compRef)


State 138

   18 fields: fields ',' field .

    $default  reduce using rule 18 (fields)


State 139

   19 field: annots type annots . nameWithId opt
   72 nameWithId: . name id
  116 name: . "ncName"
  117     | . "\\ncName"

    "ncName"    shift, and go to state 3
    "\\ncName"  shift, and go to state 4

    nameWithId  go to state 148
    name        go to state 55


State 140

   38 size: '(' uInt . ')'

    ')'  shift, and go to state 149


State 141

   39 size: '(' hexNum . ')'

    ')'  shift, and go to state 150


State 142

   32 sequence: single '[' ']' .

    $default  reduce using rule 32 (sequence)


State 143

   60 symList: symList '|' sym .

    $default  reduce using rule 60 (symList)


State 144

   63 val: '/' . int
   64    | '/' . hexNum
  120 int: . "int"
  121    | . "uint"
  123 hexNum: . "hexnum"

    "hexnum"  shift, and go to state 117
    "uint"    shift, and go to state 151
    "int"     shift, and go to state 152

    int     go to state 153
    hexNum  go to state 154


State 145

   61 sym: annots name val .

    $default  reduce using rule 61 (sym)


State 146

   62 val: e .

    $default  reduce using rule 62 (val)


State 147

   15 groupDef: nameWithId ':' qName "->" fields .  [$end, "schema", "ncName", "\\ncName", "cName", '@']
   18 fields: fields . ',' field

    ','  shift, and go to state 124

    $default  reduce using rule 15 (groupDef)


State 148

   19 field: annots type annots nameWithId . opt
   20 opt: . e
   21    | . '?'
  124 e: . %empty  [$end, "schema", "ncName", "\\ncName", "cName", ',', '@']

    '?'  shift, and go to state 155

    $default  reduce using rule 124 (e)

    opt  go to state 156
    e    go to state 157


State 149

   38 size: '(' uInt ')' .

    $default  reduce using rule 38 (size)


State 150

   39 size: '(' hexNum ')' .

    $default  reduce using rule 39 (size)


State 151

  121 int: "uint" .

    $default  reduce using rule 121 (int)


State 152

  120 int: "int" .

    $default  reduce using rule 120 (int)


State 153

   63 val: '/' int .

    $default  reduce using rule 63 (val)


State 154

   64 val: '/' hexNum .

    $default  reduce using rule 64 (val)


State 155

   21 opt: '?' .

    $default  reduce using rule 21 (opt)


State 156

   19 field: annots type annots nameWithId opt .

    $default  reduce using rule 19 (field)


State 157

   20 opt: e .

    $default  reduce using rule 20 (opt)
