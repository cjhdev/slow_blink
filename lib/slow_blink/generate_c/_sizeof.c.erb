<%@schema.groups.each do |g| -%>
static bool <%= gname(g) %>_sizeof(struct <%= gname(g) %> *self, uint32_t *size)
{
    bool retval = true;

    *size = 0U;

<%  g.fields.each do |f| %>

    if(self-><%= fname(f) %>.initialised){

<%    case f.type.class
      when STRING, BINARY -%>

        *size += BLINK_Compact_sizeofUnsigned(self-><%= fname(f) %>.value.size);
        *size += self-><%= fname(f) %>.value.size;

<%    when FIXED -%>

<%      if f.optional? -%>
        *size += 1U;
<%      end -%>

        *size += self-><%= fname(f) %>.value.size;

<%    when I8, I16, I32, I64, TIME_OF_DAY_MILLI, TIME_OF_DAY_NANO -%>
    
        *size += BLINK_Compact_sizeofSigned((int64_t)self-><%= fname(f) %>.value);
        
<%    when U8, U16, U32, U64, MILLI_TIME, NANO_TIME -%>
    
        *size += BLINK_Compact_sizeofUnsigned((uint64_t)self-><%= fname(f) %>.value);
        
<%    when StaticGroup -%>

        BLINK_ASSERT(self-><%= fname(f) %>.value != NULL)

        uint32_t groupSize;

        if(!<%= gname(f.type) %>_sizeof(self-><%= fname(f) %>.value, &groupSize)){

            retval = false;
        }
        else{

            *size += groupSize;
<%      if f.optional? -%>
            *size += 1U;
<%      end -%>
        }


<%    when DynamicGroup -%>

        BLINK_ASSERT(self-><%= fname(f) %>.value != NULL)

        uint32_t groupSize;

        switch(self-><%= fname(f) %>.value->type){
        default:
<%      f.type.groups.each do |permitted| -%>
        case TYPE_<%= permitted.name %>:
        
            if(!<%= gname(f.type) %>_sizeof((struct <%= gname(f.type) %> *)self-><%= fname(f) %>.value, &groupSize)){

                retval = false;
            }
            else{

                *size += BLINK_Compact_sizeofUnsigned(*size);
                *size += BLINK_Compact_sizeofUnsigned(<%= f.type.id %>);
                *size += groupSize;
            }
            break;
<%      end -%>            
        }
<%      %>


        if(!<%= gname(f.type) %>_sizeof(self-><%= fname(f) %>.value, size)){

            retval = false;
        }
        else{


            
        }

<%    end -%>
    }
    else{
<%    if f.optional? -%>

        *size += 1U;
<%    else -%>

        BLINK_ERROR("<%= f.name %> must be initialised")
        return false;            
<%    end -%>    
    }        
<%  end -%>

    return retval;
}
<%end -%>
